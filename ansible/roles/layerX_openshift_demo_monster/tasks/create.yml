# --- Create necessary projects demo-dev and demo-prod for user developer:
- name: check existing projects
  shell: oc get projects | awk '{ print $1 }'
  register: projects
  changed_when: false

- name: Create demo-dev project
  shell: "oadm new-project demo-dev --admin='developer' --description='ticket monster developers stage'"
  when: "'demo-dev' not in projects.stdout_lines"

- name: Create demo-prod project
  shell: "oadm new-project demo-prod --admin='developer' --description='ticket monster production stage'"
  when: "'demo-prod' not in projects.stdout_lines"

# --- Create Templates monster and monster-prod in namespace openshift:
- name: check existing templates
  shell: oc get templates -n openshift | awk '{ print $1 }'
  register: templates
  changed_when: false

- block:
  - name: Prepare Monster Dev Template
    template: src=monster_template_dev.yml.j2 dest=/tmp/monster_template_dev.yml

  - name: Create monster dev template in openshift namespace
    shell: "oc create -f /tmp/monster_template_dev.yml -n openshift"

  - name: Doing sample deployment of monster-dev app
    shell: "oc new-app --template monster-dev -n demo-dev --labels=MonsterDevInitialDeploymentTest=true"

  - name: Wait for monster dev to become online
    shell: curl "http://monster-demo-dev.apps.{{ hailstorm_dns_domain }}/"
    register: tstcurl
    changed_when: false
    until: "'<title>Ticket Monster</title>' in tstcurl.stdout"
    retries: 480
    delay: 1

  - name: Removing sample deployment of monster-dev app
    shell: "oc delete all -l MonsterDevInitialDeploymentTest -n demo-dev"
  when: "'monster-dev' not in templates.stdout_lines"


- block:
  - name: Prepare Monster Prod Template
    template: src=monster_template_prod.yml.j2 dest=/tmp/monster_template_prod.yml

  - name: Create monster prd template in openshift namespace
    shell: "oc create -f /tmp/monster_template_prod.yml -n openshift"
  when: "'monster-prod' not in templates.stdout_lines"
